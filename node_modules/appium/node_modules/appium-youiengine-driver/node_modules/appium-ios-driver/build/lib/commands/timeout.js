"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = exports.helpers = exports.commands = void 0;

require("source-map-support/register");

var _logger = _interopRequireDefault(require("../logger"));

let commands = {},
    helpers = {},
    extensions = {};
exports.helpers = helpers;
exports.commands = commands;

commands.pageLoadTimeoutW3C = async function (ms) {
  await this.setPageLoadTimeout(this.parseTimeoutArgument(ms));
};

commands.pageLoadTimeoutMJSONWP = async function (ms) {
  await this.setPageLoadTimeout(this.parseTimeoutArgument(ms));
};

commands.scriptTimeoutW3C = async function (ms) {
  await this.asyncScriptTimeout(ms);
};

commands.scriptTimeoutMJSONWP = async function (ms) {
  await this.asyncScriptTimeout(ms);
};

commands.asyncScriptTimeout = async function (ms) {
  this.setAsyncScriptTimeout(this.parseTimeoutArgument(ms));
};

helpers.setPageLoadTimeout = function (ms) {
  ms = parseInt(ms, 10);
  this.pageLoadMs = ms;

  if (this.remote) {
    this.remote.pageLoadMs = this.pageLoadMs;
  }

  _logger.default.debug(`Set page load timeout to ${ms}ms`);
};

helpers.setAsyncScriptTimeout = function (ms) {
  this.asyncWaitMs = ms;

  _logger.default.debug(`Set async script timeout to ${ms}ms`);
};

Object.assign(extensions, commands, helpers);
var _default = extensions;
exports.default = _default;require('source-map-support').install();


//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImxpYi9jb21tYW5kcy90aW1lb3V0LmpzIl0sIm5hbWVzIjpbImNvbW1hbmRzIiwiaGVscGVycyIsImV4dGVuc2lvbnMiLCJwYWdlTG9hZFRpbWVvdXRXM0MiLCJtcyIsInNldFBhZ2VMb2FkVGltZW91dCIsInBhcnNlVGltZW91dEFyZ3VtZW50IiwicGFnZUxvYWRUaW1lb3V0TUpTT05XUCIsInNjcmlwdFRpbWVvdXRXM0MiLCJhc3luY1NjcmlwdFRpbWVvdXQiLCJzY3JpcHRUaW1lb3V0TUpTT05XUCIsInNldEFzeW5jU2NyaXB0VGltZW91dCIsInBhcnNlSW50IiwicGFnZUxvYWRNcyIsInJlbW90ZSIsImxvZ2dlciIsImRlYnVnIiwiYXN5bmNXYWl0TXMiLCJPYmplY3QiLCJhc3NpZ24iXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7O0FBQUE7O0FBRUEsSUFBSUEsUUFBUSxHQUFHLEVBQWY7QUFBQSxJQUFtQkMsT0FBTyxHQUFHLEVBQTdCO0FBQUEsSUFBaUNDLFVBQVUsR0FBRyxFQUE5Qzs7OztBQUdBRixRQUFRLENBQUNHLGtCQUFULEdBQThCLGdCQUFnQkMsRUFBaEIsRUFBb0I7QUFDaEQsUUFBTSxLQUFLQyxrQkFBTCxDQUF3QixLQUFLQyxvQkFBTCxDQUEwQkYsRUFBMUIsQ0FBeEIsQ0FBTjtBQUNELENBRkQ7O0FBSUFKLFFBQVEsQ0FBQ08sc0JBQVQsR0FBa0MsZ0JBQWdCSCxFQUFoQixFQUFvQjtBQUNwRCxRQUFNLEtBQUtDLGtCQUFMLENBQXdCLEtBQUtDLG9CQUFMLENBQTBCRixFQUExQixDQUF4QixDQUFOO0FBQ0QsQ0FGRDs7QUFLQUosUUFBUSxDQUFDUSxnQkFBVCxHQUE0QixnQkFBZ0JKLEVBQWhCLEVBQW9CO0FBQzlDLFFBQU0sS0FBS0ssa0JBQUwsQ0FBd0JMLEVBQXhCLENBQU47QUFDRCxDQUZEOztBQUlBSixRQUFRLENBQUNVLG9CQUFULEdBQWdDLGdCQUFnQk4sRUFBaEIsRUFBb0I7QUFDbEQsUUFBTSxLQUFLSyxrQkFBTCxDQUF3QkwsRUFBeEIsQ0FBTjtBQUNELENBRkQ7O0FBSUFKLFFBQVEsQ0FBQ1Msa0JBQVQsR0FBOEIsZ0JBQWdCTCxFQUFoQixFQUFvQjtBQUNoRCxPQUFLTyxxQkFBTCxDQUEyQixLQUFLTCxvQkFBTCxDQUEwQkYsRUFBMUIsQ0FBM0I7QUFDRCxDQUZEOztBQUlBSCxPQUFPLENBQUNJLGtCQUFSLEdBQTZCLFVBQVVELEVBQVYsRUFBYztBQUN6Q0EsRUFBQUEsRUFBRSxHQUFHUSxRQUFRLENBQUNSLEVBQUQsRUFBSyxFQUFMLENBQWI7QUFDQSxPQUFLUyxVQUFMLEdBQWtCVCxFQUFsQjs7QUFDQSxNQUFJLEtBQUtVLE1BQVQsRUFBaUI7QUFDZixTQUFLQSxNQUFMLENBQVlELFVBQVosR0FBeUIsS0FBS0EsVUFBOUI7QUFDRDs7QUFDREUsa0JBQU9DLEtBQVAsQ0FBYyw0QkFBMkJaLEVBQUcsSUFBNUM7QUFDRCxDQVBEOztBQVNBSCxPQUFPLENBQUNVLHFCQUFSLEdBQWdDLFVBQVVQLEVBQVYsRUFBYztBQUM1QyxPQUFLYSxXQUFMLEdBQW1CYixFQUFuQjs7QUFDQVcsa0JBQU9DLEtBQVAsQ0FBYywrQkFBOEJaLEVBQUcsSUFBL0M7QUFDRCxDQUhEOztBQUtBYyxNQUFNLENBQUNDLE1BQVAsQ0FBY2pCLFVBQWQsRUFBMEJGLFFBQTFCLEVBQW9DQyxPQUFwQztlQUVlQyxVIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IGxvZ2dlciBmcm9tICcuLi9sb2dnZXInO1xuXG5sZXQgY29tbWFuZHMgPSB7fSwgaGVscGVycyA9IHt9LCBleHRlbnNpb25zID0ge307XG5cbi8vIHBhZ2VMb2FkXG5jb21tYW5kcy5wYWdlTG9hZFRpbWVvdXRXM0MgPSBhc3luYyBmdW5jdGlvbiAobXMpIHtcbiAgYXdhaXQgdGhpcy5zZXRQYWdlTG9hZFRpbWVvdXQodGhpcy5wYXJzZVRpbWVvdXRBcmd1bWVudChtcykpO1xufTtcblxuY29tbWFuZHMucGFnZUxvYWRUaW1lb3V0TUpTT05XUCA9IGFzeW5jIGZ1bmN0aW9uIChtcykge1xuICBhd2FpdCB0aGlzLnNldFBhZ2VMb2FkVGltZW91dCh0aGlzLnBhcnNlVGltZW91dEFyZ3VtZW50KG1zKSk7XG59O1xuXG4vLyBzY3JpcHRcbmNvbW1hbmRzLnNjcmlwdFRpbWVvdXRXM0MgPSBhc3luYyBmdW5jdGlvbiAobXMpIHtcbiAgYXdhaXQgdGhpcy5hc3luY1NjcmlwdFRpbWVvdXQobXMpO1xufTtcblxuY29tbWFuZHMuc2NyaXB0VGltZW91dE1KU09OV1AgPSBhc3luYyBmdW5jdGlvbiAobXMpIHtcbiAgYXdhaXQgdGhpcy5hc3luY1NjcmlwdFRpbWVvdXQobXMpO1xufTtcblxuY29tbWFuZHMuYXN5bmNTY3JpcHRUaW1lb3V0ID0gYXN5bmMgZnVuY3Rpb24gKG1zKSB7IC8vIGVzbGludC1kaXNhYmxlLWxpbmUgcmVxdWlyZS1hd2FpdFxuICB0aGlzLnNldEFzeW5jU2NyaXB0VGltZW91dCh0aGlzLnBhcnNlVGltZW91dEFyZ3VtZW50KG1zKSk7XG59O1xuXG5oZWxwZXJzLnNldFBhZ2VMb2FkVGltZW91dCA9IGZ1bmN0aW9uIChtcykge1xuICBtcyA9IHBhcnNlSW50KG1zLCAxMCk7XG4gIHRoaXMucGFnZUxvYWRNcyA9IG1zO1xuICBpZiAodGhpcy5yZW1vdGUpIHtcbiAgICB0aGlzLnJlbW90ZS5wYWdlTG9hZE1zID0gdGhpcy5wYWdlTG9hZE1zO1xuICB9XG4gIGxvZ2dlci5kZWJ1ZyhgU2V0IHBhZ2UgbG9hZCB0aW1lb3V0IHRvICR7bXN9bXNgKTtcbn07XG5cbmhlbHBlcnMuc2V0QXN5bmNTY3JpcHRUaW1lb3V0ID0gZnVuY3Rpb24gKG1zKSB7XG4gIHRoaXMuYXN5bmNXYWl0TXMgPSBtcztcbiAgbG9nZ2VyLmRlYnVnKGBTZXQgYXN5bmMgc2NyaXB0IHRpbWVvdXQgdG8gJHttc31tc2ApO1xufTtcblxuT2JqZWN0LmFzc2lnbihleHRlbnNpb25zLCBjb21tYW5kcywgaGVscGVycyk7XG5leHBvcnQgeyBjb21tYW5kcywgaGVscGVycyB9O1xuZXhwb3J0IGRlZmF1bHQgZXh0ZW5zaW9ucztcbiJdLCJmaWxlIjoibGliL2NvbW1hbmRzL3RpbWVvdXQuanMiLCJzb3VyY2VSb290IjoiLi4vLi4vLi4ifQ==
