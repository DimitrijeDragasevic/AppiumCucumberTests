"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

require("source-map-support/register");

var _logger = _interopRequireDefault(require("./logger"));

var _basedevice = _interopRequireDefault(require("./basedevice"));

class YiMac extends _basedevice.default {
  constructor() {
    super();
    let caps;
    let shell;
  }

  closeApp() {
    _logger.default.info(`YiMac: Close App`);

    let process_name = this.caps.app.substring(this.caps.app.lastIndexOf("/") + 1);
    this.shell.exec(`killall ${process_name}`);
  }

  endSession() {
    _logger.default.info(`YiMac: End Session`);

    this.closeApp();
  }

  launchApp() {
    _logger.default.info(`YiMac: Launch app`);

    let spawn = require('child_process').spawn,
        ls = spawn(this.caps.app);

    let showXcodeLog = this.caps.showXcodeLog;
    ls.stdout.on('data', function (data) {
      if (showXcodeLog === true && data != null) {
        _logger.default.debug(`Xcode Log Output: ${data.toString()}`);
      }
    });
    ls.stderr.on('data', function (data) {
      if (showXcodeLog === true && data != null) {
        _logger.default.debug(`Xcode Log Error: ${data.toString()}`);
      }
    });
    ls.on('exit', function (code) {
      if (showXcodeLog === true && code != null) {
        _logger.default.debug(`Application exited with code ${code.toString()}`);
      }
    });
  }

  startSession(caps) {
    _logger.default.info(`BlueSky: Start Session`);

    this.caps = caps;
    this.shell = require('shelljs');
    this.closeApp();
    this.launchApp();
  }

}

var _default = YiMac;
exports.default = _default;require('source-map-support').install();


//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImxpYi95aW1hYy5qcyJdLCJuYW1lcyI6WyJZaU1hYyIsIkJhc2VEZXZpY2UiLCJjb25zdHJ1Y3RvciIsImNhcHMiLCJzaGVsbCIsImNsb3NlQXBwIiwibG9nZ2VyIiwiaW5mbyIsInByb2Nlc3NfbmFtZSIsImFwcCIsInN1YnN0cmluZyIsImxhc3RJbmRleE9mIiwiZXhlYyIsImVuZFNlc3Npb24iLCJsYXVuY2hBcHAiLCJzcGF3biIsInJlcXVpcmUiLCJscyIsInNob3dYY29kZUxvZyIsInN0ZG91dCIsIm9uIiwiZGF0YSIsImRlYnVnIiwidG9TdHJpbmciLCJzdGRlcnIiLCJjb2RlIiwic3RhcnRTZXNzaW9uIl0sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7OztBQUFBOztBQUNBOztBQUVBLE1BQU1BLEtBQU4sU0FBb0JDLG1CQUFwQixDQUErQjtBQUU3QkMsRUFBQUEsV0FBVyxHQUFJO0FBQ2I7QUFDQSxRQUFJQyxJQUFKO0FBQ0EsUUFBSUMsS0FBSjtBQUNEOztBQUVEQyxFQUFBQSxRQUFRLEdBQUk7QUFDVkMsb0JBQU9DLElBQVAsQ0FBYSxrQkFBYjs7QUFDQSxRQUFJQyxZQUFZLEdBQUcsS0FBS0wsSUFBTCxDQUFVTSxHQUFWLENBQWNDLFNBQWQsQ0FBd0IsS0FBS1AsSUFBTCxDQUFVTSxHQUFWLENBQWNFLFdBQWQsQ0FBMEIsR0FBMUIsSUFBaUMsQ0FBekQsQ0FBbkI7QUFDQSxTQUFLUCxLQUFMLENBQVdRLElBQVgsQ0FBaUIsV0FBVUosWUFBYSxFQUF4QztBQUNEOztBQUVESyxFQUFBQSxVQUFVLEdBQUk7QUFDWlAsb0JBQU9DLElBQVAsQ0FBYSxvQkFBYjs7QUFDQSxTQUFLRixRQUFMO0FBQ0Q7O0FBRURTLEVBQUFBLFNBQVMsR0FBSTtBQUNYUixvQkFBT0MsSUFBUCxDQUFhLG1CQUFiOztBQUNBLFFBQUlRLEtBQUssR0FBR0MsT0FBTyxDQUFDLGVBQUQsQ0FBUCxDQUF5QkQsS0FBckM7QUFBQSxRQUNJRSxFQUFFLEdBQUdGLEtBQUssQ0FBQyxLQUFLWixJQUFMLENBQVVNLEdBQVgsQ0FEZDs7QUFHQSxRQUFJUyxZQUFZLEdBQUcsS0FBS2YsSUFBTCxDQUFVZSxZQUE3QjtBQUdFRCxJQUFBQSxFQUFFLENBQUNFLE1BQUgsQ0FBVUMsRUFBVixDQUFhLE1BQWIsRUFBcUIsVUFBVUMsSUFBVixFQUFnQjtBQUNuQyxVQUFJSCxZQUFZLEtBQUssSUFBakIsSUFBeUJHLElBQUksSUFBSSxJQUFyQyxFQUEyQztBQUN6Q2Ysd0JBQU9nQixLQUFQLENBQWMscUJBQW9CRCxJQUFJLENBQUNFLFFBQUwsRUFBZ0IsRUFBbEQ7QUFDRDtBQUNGLEtBSkQ7QUFPQU4sSUFBQUEsRUFBRSxDQUFDTyxNQUFILENBQVVKLEVBQVYsQ0FBYSxNQUFiLEVBQXFCLFVBQVVDLElBQVYsRUFBZ0I7QUFDbkMsVUFBSUgsWUFBWSxLQUFLLElBQWpCLElBQXlCRyxJQUFJLElBQUksSUFBckMsRUFBMkM7QUFDekNmLHdCQUFPZ0IsS0FBUCxDQUFjLG9CQUFtQkQsSUFBSSxDQUFDRSxRQUFMLEVBQWdCLEVBQWpEO0FBQ0Q7QUFDRixLQUpEO0FBTUFOLElBQUFBLEVBQUUsQ0FBQ0csRUFBSCxDQUFNLE1BQU4sRUFBYyxVQUFVSyxJQUFWLEVBQWdCO0FBQzVCLFVBQUlQLFlBQVksS0FBSyxJQUFqQixJQUF5Qk8sSUFBSSxJQUFJLElBQXJDLEVBQTJDO0FBQ3pDbkIsd0JBQU9nQixLQUFQLENBQWMsZ0NBQStCRyxJQUFJLENBQUNGLFFBQUwsRUFBZ0IsRUFBN0Q7QUFDRDtBQUNGLEtBSkQ7QUFLSDs7QUFFREcsRUFBQUEsWUFBWSxDQUFFdkIsSUFBRixFQUFRO0FBQ2xCRyxvQkFBT0MsSUFBUCxDQUFhLHdCQUFiOztBQUNBLFNBQUtKLElBQUwsR0FBWUEsSUFBWjtBQUNBLFNBQUtDLEtBQUwsR0FBYVksT0FBTyxDQUFDLFNBQUQsQ0FBcEI7QUFDQSxTQUFLWCxRQUFMO0FBQ0EsU0FBS1MsU0FBTDtBQUNEOztBQXJENEI7O2VBd0RoQmQsSyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBsb2dnZXIgZnJvbSAnLi9sb2dnZXInO1xuaW1wb3J0IEJhc2VEZXZpY2UgZnJvbSAnLi9iYXNlZGV2aWNlJztcblxuY2xhc3MgWWlNYWMgZXh0ZW5kcyBCYXNlRGV2aWNlIHtcblxuICBjb25zdHJ1Y3RvciAoKSB7XG4gICAgc3VwZXIoKTtcbiAgICBsZXQgY2FwcztcbiAgICBsZXQgc2hlbGw7XG4gIH1cblxuICBjbG9zZUFwcCAoKSB7XG4gICAgbG9nZ2VyLmluZm8oYFlpTWFjOiBDbG9zZSBBcHBgKTtcbiAgICBsZXQgcHJvY2Vzc19uYW1lID0gdGhpcy5jYXBzLmFwcC5zdWJzdHJpbmcodGhpcy5jYXBzLmFwcC5sYXN0SW5kZXhPZihcIi9cIikgKyAxKTtcbiAgICB0aGlzLnNoZWxsLmV4ZWMoYGtpbGxhbGwgJHtwcm9jZXNzX25hbWV9YCk7XG4gIH07XG5cbiAgZW5kU2Vzc2lvbiAoKSB7XG4gICAgbG9nZ2VyLmluZm8oYFlpTWFjOiBFbmQgU2Vzc2lvbmApO1xuICAgIHRoaXMuY2xvc2VBcHAoKTtcbiAgfVxuXG4gIGxhdW5jaEFwcCAoKSB7XG4gICAgbG9nZ2VyLmluZm8oYFlpTWFjOiBMYXVuY2ggYXBwYCk7XG4gICAgbGV0IHNwYXduID0gcmVxdWlyZSgnY2hpbGRfcHJvY2VzcycpLnNwYXduLFxuICAgICAgICBscyA9IHNwYXduKHRoaXMuY2Fwcy5hcHApO1xuXG4gICAgbGV0IHNob3dYY29kZUxvZyA9IHRoaXMuY2Fwcy5zaG93WGNvZGVMb2c7IC8vRm9yIHNvbWUgcmVhc29uIHN0ZGVyciBzdGF0ZW1lbnQgc2VlcyB0aGlzLmNhcHMgYXMgdW5kZWZpbmVkPyFcblxuICAgIC8vUHJpbnQgWGNvZGUgbG9ncyAoU1RET1VUKVxuICAgICAgbHMuc3Rkb3V0Lm9uKCdkYXRhJywgZnVuY3Rpb24gKGRhdGEpIHtcbiAgICAgICAgaWYgKHNob3dYY29kZUxvZyA9PT0gdHJ1ZSAmJiBkYXRhICE9IG51bGwpIHtcbiAgICAgICAgICBsb2dnZXIuZGVidWcoYFhjb2RlIExvZyBPdXRwdXQ6ICR7ZGF0YS50b1N0cmluZygpfWApO1xuICAgICAgICB9XG4gICAgICB9KTtcblxuICAgICAgLy9QcmludCBYY29kZSBsb2dzIChTVERFUlIpXG4gICAgICBscy5zdGRlcnIub24oJ2RhdGEnLCBmdW5jdGlvbiAoZGF0YSkge1xuICAgICAgICBpZiAoc2hvd1hjb2RlTG9nID09PSB0cnVlICYmIGRhdGEgIT0gbnVsbCkge1xuICAgICAgICAgIGxvZ2dlci5kZWJ1ZyhgWGNvZGUgTG9nIEVycm9yOiAke2RhdGEudG9TdHJpbmcoKX1gKTtcbiAgICAgICAgfVxuICAgICAgfSk7XG5cbiAgICAgIGxzLm9uKCdleGl0JywgZnVuY3Rpb24gKGNvZGUpIHtcbiAgICAgICAgaWYgKHNob3dYY29kZUxvZyA9PT0gdHJ1ZSAmJiBjb2RlICE9IG51bGwpIHtcbiAgICAgICAgICBsb2dnZXIuZGVidWcoYEFwcGxpY2F0aW9uIGV4aXRlZCB3aXRoIGNvZGUgJHtjb2RlLnRvU3RyaW5nKCl9YCk7XG4gICAgICAgIH1cbiAgICAgIH0pO1xuICB9O1xuXG4gIHN0YXJ0U2Vzc2lvbiAoY2Fwcykge1xuICAgIGxvZ2dlci5pbmZvKGBCbHVlU2t5OiBTdGFydCBTZXNzaW9uYCk7XG4gICAgdGhpcy5jYXBzID0gY2FwcztcbiAgICB0aGlzLnNoZWxsID0gcmVxdWlyZSgnc2hlbGxqcycpO1xuICAgIHRoaXMuY2xvc2VBcHAoKTtcbiAgICB0aGlzLmxhdW5jaEFwcCgpO1xuICB9XG5cbn1cbmV4cG9ydCBkZWZhdWx0IFlpTWFjO1xuIl0sImZpbGUiOiJsaWIveWltYWMuanMiLCJzb3VyY2VSb290IjoiLi4vLi4ifQ==
